apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: mysql
  labels:
    apps: mysql
spec:
  # required to generate static DNS names for each pod
  # in a stateful set
  serviceName; mysql-h

  replicas: 3
  selector:
   matchLabels:
    apps: mysql
  template: 
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data-volume
# static one volume
#      volumes:
#      - name: data-volume
#        persistentVolumeClaim: 
#         claimName: data-volume
# dynamically create volume for each pod
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi
---
# example of volumes to be dynamically created on AWS EBS

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: my-storage-class
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
reclaimPolicy: Retain
allowVolumeExpansion: true
mountOptions:
  - debug
volumeBindingMode: Immediate

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: slow
provisioner: kubernetes.io/aws-ebs
parameters:
  type: io1
  iopsPerGB: "10"
  fsType: ext4
---
# Example of storage class created on Azure
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: slow
provisioner: kubernetes.io/azure-disk
parameters:
  skuName: Standard_LRS
  location: eastus
  storageAccount: azure_storage_account_name
